# Multi-stage Dockerfile for Document Upload Application
# Supports both Streamlit frontend and FastAPI backend

# Base stage with common dependencies
FROM python:3.9-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p uploads results test_files

# Development stage
FROM base as development

# Install development dependencies
RUN pip install --no-cache-dir pytest pytest-asyncio

# Expose ports for both services
EXPOSE 8502 8503

# Default command for development (can be overridden)
CMD ["python", "-c", "print('Development container ready. Use docker-compose or specify command.')"]

# Production Streamlit stage
FROM base as streamlit-prod

# Set Streamlit configuration
ENV STREAMLIT_SERVER_PORT=8502 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false

# Expose Streamlit port
EXPOSE 8502

# Health check for Streamlit
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8502/_stcore/health || exit 1

# Run Streamlit
CMD ["streamlit", "run", "app.py", "--server.port=8502", "--server.address=0.0.0.0"]

# Production FastAPI stage
FROM base as fastapi-prod

# Set FastAPI configuration
ENV FASTAPI_HOST=0.0.0.0 \
    FASTAPI_PORT=8503 \
    FASTAPI_WORKERS=1

# Expose FastAPI port
EXPOSE 8503

# Health check for FastAPI
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8503/health || exit 1

# Run FastAPI with Uvicorn
CMD ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8503", "--workers", "1"]

# Combined production stage (both services)
FROM base as combined-prod

# Install supervisor for process management
RUN apt-get update && apt-get install -y supervisor && rm -rf /var/lib/apt/lists/*

# Copy supervisor configuration
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set environment variables for both services
ENV STREAMLIT_SERVER_PORT=8502 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false \
    FASTAPI_HOST=0.0.0.0 \
    FASTAPI_PORT=8503

# Expose both ports
EXPOSE 8502 8503

# Health check for both services
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8502/_stcore/health && curl -f http://localhost:8503/health || exit 1

# Run supervisor to manage both processes
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"] 